library(rvest)
library(dplyr)
library(janitor)
library(readr)
library(tidyr)
library(tidyverse)
library(stringr)
library(scales)
# convert data from Wall Street Journal website to R dataframe
# using rvest to parse HTML to R dataframe
document <- read_html("https://www.wsj.com/market-data/quotes/KR/XKRX/352820/financials/annual/income-statement")
class(document)
hybe_income_df <- document %>%
html_node("table") %>%
html_table
hybe_income_df <-
hybe_income_df %>%
remove_empty("cols") %>%
remove_empty("rows")
hybe_income_df <- hybe_income_df[!apply(hybe_income_df == "", 1, all), ]
hybe_income_df <-
hybe_income_df[rowSums(is.na(hybe_income_df)) != ncol(hybe_income_df), ]
View(hybe_income_df)
hybe <- hybe_income_df %>%
rename("Categories" = 1)
View(hybe)
write.csv(hybe, "C:\\Users\\darks\\Downloads\\hybe_wsj_df_1.csv",
row.names = FALSE)
# actual data analysis
# hybe data in long data format - do not refer to the hybe data above
hybe_dupe <- read_csv("C:\\Users\\darks\\Downloads\\hybe_wsj_df_1.csv")
hybe_dupe <- hybe_dupe %>%
pivot_longer(cols = c("2018", "2019", "2020", "2021", "2022"),
names_to = "Year",
values_to = "Amount")
View(hybe_dupe)
write.csv(hybe_dupe, "C:\\Users\\darks\\Downloads\\hybe_wsj_df_long_data.csv",
row.names = FALSE)
# hybe data with percentage variables only, no whole numbers
amount_percentage <- hybe_dupe %>%
filter(grepl("%", Amount))
amount_percentage <- amount_percentage %>%
mutate(Amount = as.numeric(gsub("%", "", Amount)))
amount_percentage$Amount <- (amount_percentage$Amount / 100)
amount_percentage$Amount <- percent(amount_percentage$Amount)
View(amount_percentage)
write.csv(amount_percentage,
"C:\\Users\\darks\\Downloads\\hybe_wsj_df_percentage_data.csv",
row.names = FALSE)
# hybe data with whole number variables only, no percentage
# filtering the data to only include whole number rows
hybe_dupe_numbers <- hybe_dupe %>%
filter(!str_detect(Amount, "%"))
# removing the parentheses string for negative values
hybe_dupe_numbers$Amount <- str_replace_all(hybe_dupe_numbers$Amount,
"\\(", "-")
hybe_dupe_numbers$Amount <- str_replace_all(hybe_dupe_numbers$Amount,
"\\)", "")
# removing comma string for all values
hybe_dupe_test <- hybe_dupe_numbers %>%
mutate_at("Amount", str_replace_all, ",", "")
# replace zero values being presented by a dash with a 0 string
hybe_dupe_test$Amount[hybe_dupe_test$Amount == "-"] <- "0"
# convert all values from character datatype to double datatype
hybe_dupe_test$Amount = as.numeric(as.character(hybe_dupe_test$Amount))
# total amount by years
agg_sum_year <- hybe_dupe_test %>% group_by(Year) %>%
summarise(sum_amount = sum(Amount))
View(agg_sum_year)
write.csv(agg_sum_year,
"C:\\Users\\darks\\Downloads\\hybe_wsj_df_whole_numbers_data.csv",
row.names = FALSE)
# line graph viz of hybe whole numbers data using ggplot2
ggplot(data = agg_sum_year, aes(x = Year, y = sum_amount, group = 1)) +
geom_line(color = "#A700FA") +
geom_point() +
geom_text(aes(label = sum_amount), vjust = 1.6,
color = "black", size = 3.5) +
scale_y_continuous(labels=dollar) +
scale_x_discrete(labels=abbreviate) +
labs(title = "HYBE Financial Income by Year", y = "Amount in KRW") +
theme_minimal()
View(hybe_dupe)
hybe_stacked_data <- read_csv("C:\\Users\\darks\\Downloads\\hybe_wsj_df_1.csv")
hybe_stacked_data <- hybe_dupe %>%
pivot_longer(cols = c("2018", "2019", "2020", "2021", "2022"),
names_to = "Year",
values_to = "Amount")
rlang::last_trace()
hybe_stacked_data <- read_csv("C:\\Users\\darks\\Downloads\\hybe_wsj_df_1.csv")
hybe_stacked_data <- hybe_stacked_data %>%
pivot_longer(cols = c("2018", "2019", "2020", "2021", "2022"),
names_to = "Year",
values_to = "Amount")
View(hybe_stacked_data)
write.csv(hybe_dupe, "C:\\Users\\darks\\Downloads\\hybe_wsj_df_stacked_data.csv",
row.names = FALSE)
# hybe data with percentage variables only, no whole numbers
amount_percentage <- hybe_stacked_data %>%
filter(grepl("%", Amount))
amount_percentage <- amount_percentage %>%
mutate(Amount = as.numeric(gsub("%", "", Amount)))
amount_percentage$Amount <- (amount_percentage$Amount / 100)
amount_percentage$Amount <- percent(amount_percentage$Amount)
View(amount_percentage)
write.csv(amount_percentage,
"C:\\Users\\darks\\Downloads\\hybe_wsj_df_percentage_data.csv",
row.names = FALSE)
# hybe data with whole number variables only, no percentage
# filtering the data to only include whole number rows
hybe_dupe_numbers <- hybe_stacking_data %>%
filter(!str_detect(Amount, "%"))
hybe_stacked_data <- read_csv("C:\\Users\\darks\\Downloads\\hybe_wsj_df_1.csv")
hybe_stacked_data <- hybe_stacked_data %>%
pivot_longer(cols = c("2018", "2019", "2020", "2021", "2022"),
names_to = "Year",
values_to = "Amount")
View(hybe_stacked_data)
write.csv(hybe_dupe, "C:\\Users\\darks\\Downloads\\hybe_wsj_df_stacked_data.csv",
row.names = FALSE)
# hybe data with percentage variables only, no whole numbers
amount_percentage <- hybe_stacked_data %>%
filter(grepl("%", Amount))
amount_percentage <- amount_percentage %>%
mutate(Amount = as.numeric(gsub("%", "", Amount)))
amount_percentage$Amount <- (amount_percentage$Amount / 100)
amount_percentage$Amount <- percent(amount_percentage$Amount)
View(amount_percentage)
write.csv(amount_percentage,
"C:\\Users\\darks\\Downloads\\hybe_wsj_df_percentage_data.csv",
row.names = FALSE)
# hybe data with whole number variables only, no percentage
# filtering the data to only include whole number rows
hybe_dupe_numbers <- hybe_stacked_data %>%
filter(!str_detect(Amount, "%"))
# removing the parentheses string for negative values
hybe_dupe_numbers$Amount <- str_replace_all(hybe_dupe_numbers$Amount,
"\\(", "-")
hybe_dupe_numbers$Amount <- str_replace_all(hybe_dupe_numbers$Amount,
"\\)", "")
# removing comma string for all values
hybe_dupe_test <- hybe_dupe_numbers %>%
mutate_at("Amount", str_replace_all, ",", "")
# replace zero values being presented by a dash with a 0 string
hybe_dupe_test$Amount[hybe_dupe_test$Amount == "-"] <- "0"
# convert all values from character datatype to double datatype
hybe_dupe_test$Amount = as.numeric(as.character(hybe_dupe_test$Amount))
# total amount by years
agg_sum_year <- hybe_dupe_test %>% group_by(Year) %>%
summarise(sum_amount = sum(Amount))
View(agg_sum_year)
write.csv(agg_sum_year,
"C:\\Users\\darks\\Downloads\\hybe_wsj_df_whole_numbers_data.csv",
row.names = FALSE)
# line graph viz of hybe whole numbers data using ggplot2
ggplot(data = agg_sum_year, aes(x = Year, y = sum_amount, group = 1)) +
geom_line(color = "#A700FA") +
geom_point() +
geom_text(aes(label = sum_amount), vjust = 1.6,
color = "black", size = 3.5) +
scale_y_continuous(labels=dollar) +
scale_x_discrete(labels=abbreviate) +
labs(title = "HYBE Financial Income by Year", y = "Amount in KRW") +
theme_minimal()
ggplot(data = agg_sum_year, aes(x = Year, y = sum_amount, group = 1)) +
geom_line(color = "#A700FA") +
geom_point() +
geom_text(aes(label = sum_amount), vjust = 1.6,
color = "black", size = 3.5) +
scale_y_continuous(labels=dollar_format(prefix="â‚©")) +
scale_x_discrete(labels=abbreviate) +
labs(title = "HYBE Financial Income by Year", y = "Amount in KRW") +
theme_minimal()
